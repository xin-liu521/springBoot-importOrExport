<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.velvol.salary.dao.SalaryUserInfoMapper" >
  <resultMap id="BaseResultMap" type="SalaryUserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="record_id" property="recordId" jdbcType="INTEGER" />
    <result column="rider_id" property="riderId" jdbcType="VARCHAR" />
    <result column="rider_name" property="riderName" jdbcType="VARCHAR" />
    <result column="stataion_id" property="stataionId" jdbcType="VARCHAR" />
    <result column="station_name" property="stationName" jdbcType="VARCHAR" />
    <result column="entry_time" property="entryTime" jdbcType="VARCHAR" />
    <result column="resign_time" property="resignTime" jdbcType="VARCHAR" />
    <result column="is_new_rider" property="isNewRider" jdbcType="INTEGER" />
    <result column="attend_actual" property="attendActual" jdbcType="VARCHAR" />
    <result column="belate" property="belate" jdbcType="VARCHAR" />
    <result column="absent" property="absent" jdbcType="VARCHAR" />
    <result column="rest" property="rest" jdbcType="VARCHAR" />
    <result column="leave" property="leave" jdbcType="VARCHAR" />
    <result column="vehicle" property="vehicle" jdbcType="INTEGER" />
    <result column="live" property="live" jdbcType="INTEGER" />
    <result column="subsidy_price" property="subsidyPrice" jdbcType="INTEGER" />
    <result column="smile_action_price" property="smileActionPrice" jdbcType="INTEGER" />
    <result column="temperature_price" property="temperaturePrice" jdbcType="INTEGER" />
    <result column="equip_price" property="equipPrice" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, record_id, rider_id, rider_name, stataion_id, station_name, entry_time, resign_time, is_new_rider, attend_actual, belate,
    absent, rest, `leave`, vehicle, live,subsidy_price, smile_action_price, temperature_price, equip_price, remark
  </sql>

  <select id="querySalaryUserInfoPage" resultMap="BaseResultMap" parameterType="SalaryUserInfo" >
    select
    id, record_id, rider_id, rider_name, stataion_id, station_name,
    DATE_FORMAT(entry_time,'%Y-%m-%d') AS entry_time,
    DATE_FORMAT(resign_time,'%Y-%m-%d') AS resign_time,
    is_new_rider, attend_actual, belate,
    absent, rest, `leave`, vehicle, live,subsidy_price, smile_action_price, temperature_price, equip_price, remark
    from salary_user_info
    <where>
      <if test="recordId != null and recordId != ''">
        and record_id = #{recordId}
      </if>
      <if test="riderName != null and riderName != ''">
        and rider_name LIKE "%"#{riderName}"%"
      </if>
      <if test="stataionId != null and stataionId != ''">
        and stataion_id = #{stataionId}
      </if>
      <if test="riderId != null and riderId != ''">
        and rider_id = #{riderId}
      </if>
    </where>
  </select>

  <!--根据骑手id查询-->
  <select id="selectUserInfo" parameterType="map" resultType="integer">
    SELECT count(id) FROM salary_user_info WHERE rider_id = #{riderId} AND record_id = #{recordId}
  </select>

  <insert id="insertBatch" parameterType="list" >
    insert into salary_user_info
    (record_id, rider_id, rider_name, stataion_id, station_name, entry_time, resign_time, attend_actual, belate,
    absent, rest, `leave`, vehicle, live, subsidy_price, smile_action_price, temperature_price, equip_price, remark
    )
    VALUES
    <foreach collection="list" item="order" separator=",">
      (
      #{order.recordId},
      #{order.riderId},
      #{order.riderName},
      #{order.stataionId},
      #{order.stationName},
      #{order.entryTime},
      #{order.resignTime},
      #{order.attendActual},
      #{order.belate},
      #{order.absent},
      #{order.rest},
      #{order.leave},
      #{order.vehicle},
      #{order.live},
      #{order.subsidyPrice},
      #{order.smileActionPrice},
      #{order.temperaturePrice},
      #{order.equipPrice},
      #{order.remark}
      )
    </foreach>
  </insert>

  <!--单个新增-->
  <insert id="insertUserInfo" parameterType="map">
    insert into salary_user_info
    (record_id, rider_id, rider_name, stataion_id, station_name, entry_time, resign_time, is_new_rider, attend_actual, belate,
    absent, rest, `leave`, vehicle, live, subsidy_price, smile_action_price, temperature_price, equip_price, remark
    )
    VALUES
    (
    #{recordId},
    #{riderId},
    #{riderName},
    #{stataionId},
    #{stationName},
    #{entryTime},
    #{resignTime},
    #{isNewRider},
    #{attendActual},
    #{belate},
    #{absent},
    #{rest},
    #{leave},
    #{vehicle},
    #{live},
    #{subsidyPrice},
    #{smileActionPrice},
    #{temperaturePrice},
    #{equipPrice},
    #{remark}
    )
  </insert>

  <delete id="deleteUserInfo" parameterType="Integer">
    DELETE FROM salary_user_info WHERE record_id = #{recordId}
  </delete>

  <update id="updateUserInfo" parameterType="map">
    UPDATE salary_user_info
    <set>
      <if test="riderName != null">
        rider_name =#{riderName},
      </if>
      <if test="stataionId != null">
        stataion_id =#{stataionId},
      </if>
      <if test="stationName != null">
        station_name =#{stationName},
      </if>
      <if test="entryTime != null">
        entry_time =#{entryTime},
      </if>
      <if test="resignTime != null">
        resign_time =#{resignTime},
      </if>
      <if test="isNewRider != null">
        is_New_Rider =#{isNewRider},
      </if>

      <if test="attendActual != null">
        attend_actual =#{attendActual},
      </if>
      <if test="belate != null">
        belate =#{belate},
      </if>
      <if test="absent != null">
        absent =#{absent},
      </if>
      <if test="rest != null">
        rest =#{rest},
      </if>
      <if test="leave != null">
        `leave` =#{leave},
      </if>
      <if test="vehicle != null">
        vehicle =#{vehicle},
      </if>
      <if test="live != null">
        live =#{live},
      </if>
      <if test="subsidyPrice != null">
        subsidy_price =#{subsidyPrice},
      </if>
      <if test="smileActionPrice != null">
        smile_action_price =#{smileActionPrice},
      </if>
      <if test="temperaturePrice != null">
        temperature_price =#{temperaturePrice},
      </if>
      <if test="equipPrice != null">
        equip_price =#{equipPrice},
      </if>
      <if test="remark != null">
        remark =#{remark},
      </if>
    </set>
    WHERE rider_id = #{riderId} AND record_id = #{recordId}
  </update>


  <update id="editUserInfo" parameterType="SalaryUserInfo">
    UPDATE salary_user_info
    <set>
      <if test="riderName != null">
        rider_name =#{riderName},
      </if>
      <if test="stataionId != null">
        stataion_id =#{stataionId},
      </if>
      <if test="stationName != null">
        station_name =#{stationName},
      </if>
      <if test="entryTime != null and entryTime != ''">
        entry_time =#{entryTime},
      </if>
      <if test="resignTime != null and resignTime != ''">
        resign_time =#{resignTime},
      </if>
      <if test="isNewRider != null">
        is_New_Rider =#{isNewRider},
      </if>

      <if test="attendActual != null">
        attend_actual =#{attendActual},
      </if>
      <if test="belate != null">
        belate =#{belate},
      </if>
      <if test="absent != null">
        absent =#{absent},
      </if>
      <if test="rest != null">
        rest =#{rest},
      </if>
      <if test="leave != null">
        `leave` =#{leave},
      </if>
      <if test="vehicle != null">
        vehicle =#{vehicle},
      </if>
      <if test="live != null">
        live =#{live},
      </if>
      <if test="subsidyPrice != null">
        subsidy_price =#{subsidyPrice},
      </if>
      <if test="smileActionPrice != null">
        smile_action_price =#{smileActionPrice},
      </if>
      <if test="temperaturePrice != null">
        temperature_price =#{temperaturePrice},
      </if>
      <if test="equipPrice != null">
        equip_price =#{equipPrice},
      </if>
      <if test="remark != null">
        remark =#{remark},
      </if>
    </set>
    WHERE id = #{id}
  </update>
</mapper>